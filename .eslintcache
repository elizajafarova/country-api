[{"D:\\react\\blog\\src\\index.js":"1","D:\\react\\blog\\src\\reportWebVitals.js":"2","D:\\react\\blog\\src\\App.js":"3","D:\\react\\blog\\src\\hooks\\Clicker.js":"4","D:\\react\\blog\\src\\hooks\\SWMovies.js":"5","D:\\react\\blog\\src\\hooks\\Country.js":"6"},{"size":500,"mtime":1607875803098,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607875803098,"results":"9","hashOfConfig":"8"},{"size":162,"mtime":1609884942604,"results":"10","hashOfConfig":"8"},{"size":288,"mtime":1609866855521,"results":"11","hashOfConfig":"8"},{"size":707,"mtime":1609877952603,"results":"12","hashOfConfig":"8"},{"size":640,"mtime":1609885696329,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1eyk7yo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\blog\\src\\index.js",[],["28","29"],"D:\\react\\blog\\src\\reportWebVitals.js",[],"D:\\react\\blog\\src\\App.js",[],"D:\\react\\blog\\src\\hooks\\Clicker.js",[],"D:\\react\\blog\\src\\hooks\\SWMovies.js",["30"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SWMovies() {\r\n  const [number, setNumber] = useState(1);\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get(`https://swapi.dev/api/films/${number}`)\r\n    console.log(response);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Movies</h1>\r\n      <small>Your shose val: {number} </small>\r\n      <select value={number} onChange={(e) => setNumber(e.target.value)}>\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\blog\\src\\hooks\\Country.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":7,"column":13,"nodeType":"37","endLine":10,"endColumn":4},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]